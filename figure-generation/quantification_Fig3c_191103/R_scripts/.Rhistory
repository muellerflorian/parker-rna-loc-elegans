#loading packages
library(dplyr)
library(ggplot2)
library(ggthemes)
library(gridExtra)
library(tidyr)
# import the data
quantTable <- read.table(file = "../1_input/figure5_sourcedata1_191101.txt", header = TRUE)
# re-order the factors
quantTable$Cell_Stage <- factor(quantTable$Cell_Stage, levels = c("4-cell", "8-cell", "12-14-cell", "16-24-cell", "26-48-cell"))
quantTable
dim(quantTable)
head(quantTable)
str(quantTable)
#Filter out pie-1 values
noPie <- filter(quantTable, RNAi_Condition != "pie-1")
#Reset the order of factors for RNAi conditions
noPie$RNAi_Condition <- factor(noPie$RNAi_Condition, levels = c("L4440", "oma-1", "mex-3", "spn-4", "spn-4_mex-3"))
# Make a function to summarize the data
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
# Make a plotting function
# Make a function to plot the data
# plotStats(dataset, varname, titleY)
#    dataset <- this is a dataset in the form produced by 'data_summary'
#    varname <- this corresponds to a colname in 'dataset'
#    titleY  <- this is a title for the Y axis of the plot
plotStats <- function(dataset, varname, titleY){
ggplot(dataset, aes(x=Cell_Stage, y=varname, group=RNAi_Condition, color=RNAi_Condition, shape = RNAi_Condition))+
geom_ribbon(aes(ymin=varname-sd, ymax=varname+sd, fill = RNAi_Condition), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript , scales = "free_y") +
labs(y = titleY) +
geom_line() + geom_point() +
theme_linedraw() +
scale_colour_colorblind() +
scale_fill_colorblind() +
scale_shape_manual(values=c(15, 16, 17, 18, 6)) +
theme(strip.text = element_text(face = "italic"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
}
#Summarize the data for Number of RNAs
noPiel_summ_total_RNA <- data_summary(noPie, varname="Total_No_RNA",
groupnames=c("Transcript", "RNAi_Condition", "Cell_Stage"))
#Filter out pie-1 values
noPie <- filter(quantTable, RNAi_Condition != "pie-1")
#Reset the order of factors for RNAi conditions
noPie$RNAi_Condition <- factor(noPie$RNAi_Condition, levels = c("L4440", "oma-1", "mex-3", "spn-4", "spn-4_mex-3"))
# Make a function to summarize the data
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
# Make a plotting function
# Make a function to plot the data
# plotStats(dataset, varname, titleY)
#    dataset <- this is a dataset in the form produced by 'data_summary'
#    varname <- this corresponds to a colname in 'dataset'
#    titleY  <- this is a title for the Y axis of the plot
plotStats <- function(dataset, varname, titleY){
ggplot(dataset, aes(x=Cell_Stage, y=varname, group=RNAi_Condition, color=RNAi_Condition, shape = RNAi_Condition))+
geom_ribbon(aes(ymin=varname-sd, ymax=varname+sd, fill = RNAi_Condition), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript , scales = "free_y") +
labs(y = titleY) +
geom_line() + geom_point() +
theme_linedraw() +
scale_colour_colorblind() +
scale_fill_colorblind() +
scale_shape_manual(values=c(15, 16, 17, 18, 6)) +
theme(strip.text = element_text(face = "italic"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
}
#Summarize the data for Number of RNAs
noPiel_summ_total_RNA <- data_summary(noPie, varname="Total_No_RNA",
groupnames=c("Transcript", "RNAi_Condition", "Cell_Stage"))
str(noPie)
# median relative
data_summarylog <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(median = log(median(x[[col]], na.rm=TRUE),10),
sd = sd(log(x[[col]],10), na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("median" = varname))
data_sum[is.na(data_sum)] <- 0
return(data_sum)
}
# Make a plotting function
# Make a function to plot the data
# plotStats(dataset, varname, titleY)
#    dataset <- this is a dataset in the form produced by 'data_summary'
#    varname <- this corresponds to a colname in 'dataset'
#    titleY  <- this is a title for the Y axis of the plot
plotStats <- function(dataset, varname, titleY){
ggplot(dataset, aes(x=Cell_Stage, y=varname, group=RNAi_Condition, color=RNAi_Condition, shape = RNAi_Condition))+
geom_ribbon(aes(ymin=varname-sd, ymax=varname+sd, fill = RNAi_Condition), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript , scales = "free_y") +
labs(y = titleY) +
geom_line() + geom_point() +
theme_linedraw() +
scale_colour_colorblind() +
scale_fill_colorblind() +
scale_shape_manual(values=c(15, 16, 17, 18, 6)) +
theme(strip.text = element_text(face = "italic"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
}
#Summarize the data for Number of RNAs
noPiel_summ_total_RNA <- data_summary(noPie, varname="Total_No_RNA",
groupnames=c("Transcript", "RNAi_Condition", "Cell_Stage"))
rlang::last_error()
