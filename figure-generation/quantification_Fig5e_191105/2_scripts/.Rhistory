geom_violin() +
theme(axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(Image, log(clustersize))) +
facet_grid(. ~ RNAi) +
geom_violin() +
theme(axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize))) +
geom_violin(bw = 0.2) +
geom_boxplot(width=0.1) +
theme(strip.text = element_text(face = "italic"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize))) +
geom_violin(bw = 0.2, colour = RNAi) +
geom_boxplot(width=0.1) +
theme(strip.text = element_text(face = "italic"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize))) +
geom_violin(bw = 0.2, colour = c("blue", "red")) +
geom_boxplot(width=0.1) +
theme(strip.text = element_text(face = "italic"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize))) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2)) +
theme(strip.text = element_text(face = "italic"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize))) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
theme(strip.text = element_text(face = "italic"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
theme(strip.text = element_text(face = "italic"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
theme_minimal(strip.text = element_text(face = "italic"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
theme_minimal()+
theme(strip.text = element_text(face = "italic"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
theme_minimal()+
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
theme_minimal()+
theme(strip.text = element_text(face = "italic"),
panel.grid.minor = element_line(colour = "grey"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
theme_minimal()+
ylim = c(0, 8) +
theme(strip.text = element_text(face = "italic"),
panel.grid.minor = element_line(colour = "grey"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
theme_minimal()+
theme_classic()
ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
theme_minimal()+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.minor = element_line(colour = "grey"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
theme_minimal()+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
ylim(c(0, 8))+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
t.test(clustersize ~ RNAi, data = clusterTable)
# Save the p-value
p.value <- t.test(clustersize ~ RNAi, data = clusterTable)$p-value
# Save the p-value
pvalue <- t.test(clustersize ~ RNAi, data = clusterTable)
str(pvalue)
# Save the p-value
pvalue <- t.test(clustersize ~ RNAi, data = clusterTable)$p.value
str(pvalue)
help(geom_text)
help(geom_label)
help(geom_label)
ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
ylim(c(0, 8))+
annotate(geom="text", x=1.5, y=7, label=pvalue, color="red")+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
clusterTable %>%
group_by(RNAi) %>%
summarize(n())
clusterTable %>%
group_by(image) %>%
summarize(n())
str(clusterTable)
clusterTable %>%
group_by(RNAi) %<%
group_by(Image) %>%
summarize(n())
clusterTable %>%
group_by(RNAi) %>%
group_by(Image) %>%
summarize(n())
test <- clusterTable %>%
group_by(RNAi) %>%
group_by(Image) %>%
summarize(n())
test
test <- clusterTable %>%
group_by(RNAi, Image) %>%
summarize(n())
test
print("script initiated on", quote = FALSE)
Sys.time()
#loading packages
library(dplyr)
library(ggplot2)
# import the data
clusterTable <- read.csv(file = "../1_input/clusters.csv", header = TRUE)
dim(clusterTable)
head(clusterTable)
str(clusterTable)
t.test(clustersize ~ RNAi, data = clusterTable)
# Save the p-value
pvalue <- t.test(clustersize ~ RNAi, data = clusterTable)$p.value
# Plot
p_violinplot <- ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
ylim(c(0, 8))+
annotate(geom="text", x=1.5, y=7, label=pvalue, color="red")+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
# Enumerate clusters
clusterTable %>%
group_by(RNAi) %>%
summarize(n())
# Enumerate embryos
test <- clusterTable %>%
group_by(RNAi, Image) %>%
summarize(n())
#Set date
date <- format(Sys.time(), "%y%m%d")
#set filename
filename <- paste("../3_output/", date, "_output_plots_Fig6E.pdf", sep = "")
#export pdf
pdf(file = filename, width = 6, height = 6)
p_violinplot
dev.off()
dev.off()
#Report
print("The following output plot was saved: ", quote = FALSE)
print(filename, quote = FALSE)
#loading packages
library(dplyr)
library(ggplot2)
# import the data
clusterTable <- read.csv(file = "../1_input/figure5_sourcedata2_101105.txt", header = TRUE)
dim(clusterTable)
head(clusterTable)
str(clusterTable)
t.test(clustersize ~ RNAi, data = clusterTable)
# Save the p-value
pvalue <- t.test(clustersize ~ RNAi, data = clusterTable)$p.value
# Calculate the t-test
str(clusterTable)
# Calculate the t-test
str(clusterTable)
transcript_quantTable <- clusterTable %>%
filter(RNAi == "mex-3") %>%
filter(RNAi_Condition == "L4440" | RNAi_Condition == "mex-3")
# Calculate the t-test
str(clusterTable)
transcript_quantTable <- clusterTable %>%
filter(RNAi == "L4440" | RNAi == "mex-3")
transcript_quantTable
#Adjust factor levels
transcript_quantTable$RNAi <- factor(transcript_quantTable$RNAi, levels = c("L4440", "mex-3"))
transcript_quantTable
# Save the p-value
pvalue <- t.test(clustersize ~ RNAi, data = transcript_quantTable)$p.value
pvalue
# Save the p-value
pvalue <- t.test(clustersize ~ RNAi, data = transcript_quantTable)
pvalue
calculate_pvalue <- function(data, RNAiKD){
transcript_quantTable <- data %>%
filter(RNAi == "L4440" | RNAi == RNAiKD)
#Adjust factor levels
transcript_quantTable$RNAi <- factor(transcript_quantTable$RNAi, levels = c("L4440", RNAiKD))
# Save the p-value
ttestresult <- t.test(clustersize ~ RNAi, data = transcript_quantTable)
return(ttestresult)
}
calculate_pvalue(clusterTable, "mex-3")
calculate_pvalue(clusterTable, "spn-4")
str(clusterTable)
str(clusterTable$RNAi)
unique(clusterTable$RNAi)
calculate_pvalue(clusterTable, "spn-4_mex-3")
# Plot
p_violinplot <- ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
ylim(c(0, 8))+
annotate(geom="text", x=1.5, y=7, label=pvalue, color="red")+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
p_violinplot
# Plot
p_violinplot <- ggplot(clusterTable, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
ylim(c(0, 8))+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
p_violinplot
plot_data <- clusterTable %>%
filter(RNAi == "L4440" | RNAi == "mex-3" | RNAi == "spn-4" | RNAi == "spn-4_mex-3")
plot_data <- clusterTable %>%
filter(RNAi == "L4440" | RNAi == "mex-3" | RNAi == "spn-4" | RNAi == "spn-4_mex-3")
plot_data$RNAi <- factor(transcript_quantTable$RNAi, levels = c("L4440", "mex-3", "spn-4", "spn-4_mex-3"))
plot_data$RNAi <- factor(plot_data$RNAi, levels = c("L4440", "mex-3", "spn-4", "spn-4_mex-3"))
plot_data
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
ylim(c(0, 8))+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
p_violinplot
help(geom_violin)
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2, fill= c("grey", "blue", "lightgreen", "yellow")) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
ylim(c(0, 8))+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
p_violinplot
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2, colour= c("grey", "blue", "lightgreen", "yellow")) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
ylim(c(0, 8))+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
p_violinplot
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
ylim(c(0, 8))+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
p_violinplot
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#56B4E9") +
""
>
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#56B4E9") +
ylim(c(0, 8))+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
)
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#56B4E9") +
ylim(c(0, 8))+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
)
p_violinplot
, colour= c("grey", "blue", "lightgreen", "yellow")
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#56B4E9") +
ylim(c(0, 8))+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
)
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
scale_fill_manual(values=c("#grey", "#blue", "#56B4E9", "#56B4E9") +
ylim(c(0, 8))+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
)
p_violinplot
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
scale_fill_manual(values=c("#grey", "#blue", "#56B4E9", "#56B4E9")) +
ylim(c(0, 8))+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
scale_fill_manual(values=c("#grey", "#blue", "#56B4E9", "#56B4E9")) +
ylim(c(0, 8))+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
scale_fill_manual(values=c("#grey", "#blue", "#56B4E9", "#56B4E9")) +
ylim(c(0, 8))+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
p_violinplot
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
scale_fill_manual(values=c("#CCCCCC", "#66CCCC", "#009966", "#FFCC00")) +
ylim(c(0, 8))+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
p_violinplot
pvalue1 <- calculate_pvalue(clusterTable, "mex-3")$p.value
pvalue1
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
scale_fill_manual(values=c("#CCCCCC", "#66CCCC", "#009966", "#FFCC00")) +
ylim(c(0, 8))+
annotate(geom="text", x=1.5, y=6.25, label=pvalue1, color="#66CCCC")+
annotate(geom="text", x=2.5, y=7, label=pvalue2, color="#009966")+
annotate(geom="text", x=3.5, y=7.75, label=pvalue3, color="#FFCC00")+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
p_violinplot
# Save p values
pvalue1 <- calculate_pvalue(clusterTable, "mex-3")$p.value
pvalue2 <- calculate_pvalue(clusterTable, "spn-4")$p.value
pvalue3 <- calculate_pvalue(clusterTable, "spn-4_mex-3")$p.value
plot_data <- clusterTable %>%
filter(RNAi == "L4440" | RNAi == "mex-3" | RNAi == "spn-4" | RNAi == "spn-4_mex-3")
plot_data$RNAi <- factor(plot_data$RNAi, levels = c("L4440", "mex-3", "spn-4", "spn-4_mex-3"))
p_violinplot <- ggplot(plot_data, aes(RNAi, log(clustersize), fill=RNAi)) +
geom_violin(bw = 0.2) +
geom_jitter(shape=16, position=position_jitter(0.2), alpha = 0.5) +
scale_fill_manual(values=c("#CCCCCC", "#66CCCC", "#009966", "#FFCC00")) +
ylim(c(0, 8))+
annotate(geom="text", x=1.5, y=6.25, label=pvalue1, color="#66CCCC")+
annotate(geom="text", x=2.5, y=7, label=pvalue2, color="#009966")+
annotate(geom="text", x=3.5, y=7.75, label=pvalue3, color="#FFCC00")+
theme_classic() +
theme(strip.text = element_text(face = "italic"),
panel.grid.major = element_line(colour = "grey"),
axis.text.y = element_text(angle=90),
axis.text.x = element_text(angle=90))
p_violinplot
# Enumerate clusters
clusterTable %>%
group_by(RNAi) %>%
summarize(n())
# Enumerate embryos
test <- clusterTable %>%
group_by(RNAi, Image) %>%
summarize(n())
#Set date
date <- format(Sys.time(), "%y%m%d")
#set filename
filename <- paste("../3_output/", date, "_output_plots_Fig6E.pdf", sep = "")
#export pdf
pdf(file = filename, width = 6, height = 6)
p_violinplot
dev.off()
dev.off()
#Report
print("The following output plot was saved: ", quote = FALSE)
print(filename, quote = FALSE)
p <- pvalue1
(0.05 < p )
(0.005 < p )
(0.0005 < p )
(0.00005 < p )
p <- pvalue2
(0.05 < p )
(0.005 < p )
(0.0005 < p )
p <- pvalue3
(0.05 < p )
(0.005 < p )
(0.0005 < p )
