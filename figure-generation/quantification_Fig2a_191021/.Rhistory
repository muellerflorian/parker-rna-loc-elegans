library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="~/Dropbox/labwork/PROJECTS/quantification_RNA_RBPS")
getwd()
projectdir <- "~/Dropbox/labwork/PROJECTS/quantification_RNA_RBPS"
inputdir <- paste(projectdir, "1_input", sep = "/")
outputdir <- paste(projectdir, "3_output", sep = "/")
# Read in the counts data
setwd(inputdir) # Set working directory
getwd() # Check the working directory
knitr::opts_knit$set(root.dir="~/Dropbox/labwork/PROJECTS/quantification_RNA_RBPS/1_input")
setwd("~/Dropbox/labwork/PROJECTS/quantification_RNA_RBPS/1_input")
quantTable <- read.table(file = "RNAi_Quantification_table_clean.txt", header = TRUE, row.names = 1) # import the data
# re-order the factors
quantTable$Cell_Stage <- factor(quantTable$Cell_Stage, levels = c("4-cell", "8-cell", "12-14-cell", "16-24-cell", "25-48-cell", "26-48-cell"))
# Merge the "25-48-cell"" with the "26-48-cell" categories"
quantTable$Cell_Stage[which(quantTable$Cell_Stage == "26-48-cell")] <- "25-48-cell"
dim(quantTable)
head(quantTable)
ggplot(quantTable, aes(Cell_Stage, Total_no_RNA, fill= RNAi_Condition)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25, colour = rep(c("purple", "green"), 10)) +
geom_dotplot(binaxis = "y",stackdir = "center") +
scale_fill_manual(values=c("purple", "green")) +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(quantTable, aes(Cell_Stage, Total_no_RNA, fill= RNAi_Condition)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25, colour = rep(c("purple", "green", "magenta"), 10)) +
geom_dotplot(binaxis = "y",stackdir = "center") +
scale_fill_manual(values=c("purple", "green", "magenta")) +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(quantTable, aes(Cell_Stage, Total_no_RNA, fill= RNAi_Condition)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25, colour = rep(c("purple", "green", "orange"), 10)) +
geom_dotplot(binaxis = "y",stackdir = "center") +
scale_fill_manual(values=c("purple", "green", "orange")) +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(quantTable, aes(Cell_Stage, log(No_RNA_clusters), fill= RNAi_Condition)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25, colour = rep(c("purple", "green", "orange"), 10)) +
geom_dotplot(binaxis = "y",stackdir = "center") +
scale_fill_manual(values=c("purple", "green", "orange")) +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(quantTable, aes(Cell_Stage, fraction_RNA_in_clusters, fill= RNAi_Condition)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25, colour = rep(c("purple", "green", "orange"), 10)) +
geom_dotplot(binaxis = "y",stackdir = "center") +
scale_fill_manual(values=c("purple", "green", "orange")) +
scale_y_continuous(limits=c(0, 1)) +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(quantTable, aes(Cell_Stage, Average_RNA_per_Cluster, fill= RNAi_Condition)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25, colour = rep(c("purple", "green", "orange"), 10)) +
geom_dotplot(binaxis = "y",stackdir = "center") +
scale_fill_manual(values=c("purple", "green", "orange")) +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
Wilcoxon.test(RNAi_Condition ~ Cell_Stage+Transcript, data = quantTable)
wilcox.test(RNAi_Condition ~ Cell_Stage+Transcript, data = quantTable)
wilcox.test(RNAi_Condition ~ (Cell_Stage+Transcript), data = quantTable)
wilcox.test(RNAi_Condition ~ (Cell_Stage), data = quantTable)
wilcox.test(RNAi_Condition ~ Cell_Stage, data = quantTable)
wilcox.test(Average_RNA_per_Cluster ~ RNAi_Condition, data = noPie)
noPie <- filter(quantTable, RNAi_Condition == "mex-3" | RNAi_Condition == "L4440" )
dim(noPie)
wilcox.test(Average_RNA_per_Cluster ~ RNAi_Condition, data = noPie)
wilcox.test(Average_RNA_per_Cluster ~ (RNAi_Condition+Cell_Stage), data = noPie)
setwd("~/Dropbox/labwork/PROJECTS/Parker_etal_github/quantification_Fig2a_191021")
# import the data
erm1HistTable <- read.table(file = "../1_input/figure2_Sourcedata1_191027.txt", header = TRUE, row.names = 1)
# import the data
erm1HistTable <- read.table(file = "../1_input/figure2_sourceData1_191027.txt", header = TRUE, row.names = 1)
# import the data
erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.csv", header = TRUE, row.names = 1, sep = ",")
erm1HistTable
# import the data
erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.csv", header = TRUE, row.names = 1, sep = ";")
erm1HistTable
write(erm1HistTable, filename = "../1_input/figure2_sourcedata1_191027.txt", sep = "\t")
write(erm1HistTable, file = "../1_input/figure2_sourcedata1_191027.txt", sep = "\t")
write.table(erm1HistTable, file = "../1_input/figure2_sourcedata1_191027.txt", sep = "\t")
write.table(erm1HistTable, file = "../1_input/figure2_sourcedata1_191027.txt", quote = FALSE, sep = "\t")
erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.txt", header = TRUE, row.names = 1, sep = "\t")
erm1HistTable
erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.txt", header = TRUE,
erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.txt", header = TRUE)
erm1HistTable
erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.txt", header = TRUE)
erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.txt", header = TRUE)
erm1HistTable
erm1HistTable %>%
mutate(distance = rownames())
#loading packages
library(dplyr)
library(ggplot2)
erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.txt", header = TRUE)
erm1HistTable %>%
mutate(distance = rownames())
erm1HistTable %>%
mutate(distance = rownames)
add_rownames(erm1HistTable)
help(add_rownames)
add_rownames(erm1HistTable, var = "distance")
rownames_to_column(erm1HistTable, var = "distance")
help(rownames_to_column)
rownames_to_column(erm1HistTable, var = "distance")
library(tibble)
install.packages("tibble", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
knitr::opts_chunk$set(echo = TRUE)
# import the data
#erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.csv", header = TRUE, row.names = 1, sep = ";")
#write.table(erm1HistTable, file = "../1_input/figure2_sourcedata1_191027.txt", quote = FALSE, sep = "\t")
erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.txt", header = TRUE)
erm1HistTable %>%
mutate(distance = rownames)
library(tibble)
erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.txt", header = TRUE)
erm1HistTable %>%
mutate(distance = rownames)
#loading packages
library(dplyr)
library(ggplot2)
library(tibble)
erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.txt", header = TRUE)
erm1HistTable %>%
mutate(distance = rownames)
rownames_to_column(erm1HistTable, var = "distance")
erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.txt", row.names = FALSE, header = TRUE)
# import the data
erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.csv", header = TRUE, sep = ";")
erm1HistTable
write.table(erm1HistTable, file = "../1_input/figure2_sourcedata1_191027.txt", quote = FALSE, sep = "\t")
erm1HistTable <- read.table(file = "../1_input/figure2_sourcedata1_191027.txt", header = TRUE)
erm1HistTable
erm1HistTable
barplot(erm1HistTable$center, erm1HistTable$hist_RNA_all_normPix)
hist(erm1HistTable$center, erm1HistTable$hist_RNA_all_normPix)
plot(erm1HistTable$center, erm1HistTable$hist_RNA_all_normPix)
help(barplot)
barplot(erm1HistTable$hist_RNA_all_normPix, names.arg = erm1HistTable$center)
barplot(erm1HistTable$hist_RNA_all_normPix, names.arg = erm1HistTable$center, border = NA, space = 0)
barplot(erm1HistTable$hist_RNA_all_normPix, names.arg = erm1HistTable$center, border = NA, space = 0, inside = TRUE)
barplot(erm1HistTable$hist_RNA_all_normPix, names.arg = erm1HistTable$center, border = NA, space = 0.1)
heat.colors(4, alpha=1)
colors = c(
"#000000FF",
"#330000FF",
"#660000FF",
"#CC3333FF",
"#FF3333FF",
"#FF9933FF",
"#FFCC66FF",
"#FFFF00FF",
"#FFFF99FF")
barplot(erm1HistTable$hist_RNA_all_normPix, names.arg = erm1HistTable$center, border = NA, space = 0.1, col = colors)
barplot(erm1HistTable$hist_RNA_all_normPix, names.arg = erm1HistTable$center, border = NA, space = 0.1, col = colors, family = "sans")
r <- barplot(erm1HistTable$hist_RNA_all_normPix, names.arg = erm1HistTable$center, border = NA, space = 0.1, col = colors, family = "sans")
r <- barplot(erm1HistTable$hist_RNA_all_normPix, names.arg = erm1HistTable$center, border = NA, space = 0.1, col = colors, family = "sans")
box()
barplot(erm1HistTable$hist_RNA_all_normPix, names.arg = erm1HistTable$center, border = NA, space = 0.1, col = colors, family = "sans")
box()
box()
barplot(erm1HistTable$hist_RNA_all_normPix, names.arg = erm1HistTable$center, border = NA, space = 0.1, col = colors, family = "sans")
barplot(erm1HistTable$hist_RNA_all_normPix,
names.arg = erm1HistTable$center,
border = NA,
space = 0.1,
col = colors,
family = "sans")
box()
plot.new()
barplot(erm1HistTable$hist_RNA_all_normPix,
names.arg = erm1HistTable$center,
border = NA,
space = 0.1,
col = colors,
family = "sans")
box()
plot.new()
box()
barplot(erm1HistTable$hist_RNA_all_normPix,
names.arg = erm1HistTable$center,
border = NA,
space = 0.1,
col = colors,
family = "sans",
xlab = "Distance from cortex [pixel]",
ylab = "erm-1 mRNA\n[norm. frequency]")
barplot(erm1HistTable$hist_RNA_all_normPix,
names.arg = erm1HistTable$center,
border = NA,
space = 0.1,
col = colors,
family = "sans",
xlab = "Distance from cortex [pixel]",
ylab = "erm-1 mRNA\n[norm. frequency]",
ylim = c(0, 2.0))
par(pty="s")
barplot(erm1HistTable$hist_RNA_all_normPix,
names.arg = erm1HistTable$center,
border = NA,
space = 0.1,
col = colors,
family = "sans",
xlab = "Distance from cortex [pixel]",
ylab = "erm-1 mRNA\n[norm. frequency]",
ylim = c(0, 2.0))
p_erm_bar <- barplot(erm1HistTable$hist_RNA_all_normPix,
names.arg = erm1HistTable$center,
border = NA,
space = 0.1,
col = colors,
family = "sans",
xlab = "Distance from cortex [pixel]",
ylab = "erm-1 mRNA\n[norm. frequency]",
ylim = c(0, 2.0))
#Set date
date <- format(Sys.time(), "%y%m%d")
#set filename
filename <- paste("../3_output/", date, "_output_plots_Fig2a.pdf", sep = "")
pdf(file = filename, width = 4, height = 4)
par(pty="s")
p_erm_bar
dev.off()
dev.off()
dev.off()
#Set date
date <- format(Sys.time(), "%y%m%d")
#set filename
filename <- paste("../3_output/", date, "_output_plots_Fig2a.pdf", sep = "")
pdf(file = filename, width = 4, height = 4)
par(pty="s")
p_erm_bar
dev.off()
p_erm_bar <- barplot(erm1HistTable$hist_RNA_all_normPix,
names.arg = erm1HistTable$center,
border = NA,
space = 0.1,
col = colors,
family = "sans",
xlab = "Distance from cortex [pixel]",
ylab = "erm-1 mRNA\n[norm. frequency]",
ylim = c(0, 2.0))
p_erm_bar
barplot(erm1HistTable$hist_RNA_all_normPix,
names.arg = erm1HistTable$center,
border = NA,
space = 0.1,
col = colors,
family = "sans",
xlab = "Distance from cortex [pixel]",
ylab = "erm-1 mRNA\n[norm. frequency]",
ylim = c(0, 2.0))
pdf(file = filename, width = 4, height = 4)
par(pty="s")
barplot(erm1HistTable$hist_RNA_all_normPix,
names.arg = erm1HistTable$center,
border = NA,
space = 0.1,
col = colors,
family = "sans",
xlab = "Distance from cortex [pixel]",
ylab = "erm-1 mRNA\n[norm. frequency]",
ylim = c(0, 2.0))
dev.off()
dev.off()
#set filename
filename <- paste("../3_output/", date, "_output_plots_Fig2a.pdf", sep = "")
pdf(file = filename, width = 4, height = 4)
par(pty="s")
barplot(erm1HistTable$hist_RNA_all_normPix,
names.arg = erm1HistTable$center,
border = NA,
space = 0.1,
col = colors,
family = "sans",
xlab = "Distance from cortex [pixel]",
ylab = "erm-1 mRNA\n[norm. frequency]",
ylim = c(0, 2.0))
dev.off()
#set filename
filename <- paste("../3_output/", date, "_output_plots_Fig2a.pdf", sep = "")
pdf(file = filename, width = 4, height = 4)
barplot(erm1HistTable$hist_RNA_all_normPix,
names.arg = erm1HistTable$center,
border = NA,
space = 0.1,
col = colors,
family = "sans",
xlab = "Distance from cortex [pixel]",
ylab = "erm-1 mRNA\n[norm. frequency]",
ylim = c(0, 2.0))
dev.off()
dev.off()
erm1HistTable
ggplot(erm1HistTable, aes(x=center, y=hist_RNA_all_normPix, color=colors))+
geom_bar()
ggplot(erm1HistTable, aes(x=center, y=hist_RNA_all_normPix))
ggplot(data = erm1HistTable, aes(x=center, y=hist_RNA_all_normPix))
ggplot(data = erm1HistTable, aes(x=center, y=hist_RNA_all_normPix)) +
geom_bar(stat="identity")
ggplot(data = erm1HistTable, aes(x=center, y=hist_RNA_all_normPix, col = colors)) +
geom_bar(stat="identity") +
+
geom_bar()
help(ggplot)
ggplot(data = erm1HistTable, aes(x=center, y=hist_RNA_all_normPix, color = colors)) +
geom_bar(stat="identity") +
+
geom_bar()
ggplot(data = erm1HistTable, aes(x=center, y=hist_RNA_all_normPix, colour = colors)) +
geom_bar(stat="identity") +
+
geom_bar()
ggplot(data = erm1HistTable, aes(x=center, y=hist_RNA_all_normPix)) +
geom_bar(stat="identity") +
+
geom_bar()
ggplot(data = erm1HistTable, aes(x=center, y=hist_RNA_all_normPix)) +
geom_bar(stat="identity")
ggplot(data = erm1HistTable, aes(x=center, y=hist_RNA_all_normPix, color = colors)) +
geom_bar(stat="identity")
#Set date
date <- format(Sys.time(), "%y%m%d")
#set filename
filename <- paste("../3_output/", date, "_output_plots_Fig2a.pdf", sep = "")
pdf(file = filename, width = 4, height = 4)
barplot(erm1HistTable$hist_RNA_all_normPix,
names.arg = erm1HistTable$center,
border = NA,
space = 0.1,
col = colors,
family = "sans",
xlab = "Distance from cortex [pixel]",
ylab = "erm-1 mRNA\n[norm. frequency]",
ylim = c(0, 2.0))
dev.off()
dev.off()
p_barplot <- barplot(erm1HistTable$hist_RNA_all_normPix,
names.arg = erm1HistTable$center,
border = NA,
space = 0.1,
col = colors,
family = "sans",
xlab = "Distance from cortex [pixel]",
ylab = "erm-1 mRNA\n[norm. frequency]",
ylim = c(0, 2.0))
pdf(file = filename, width = 4, height = 4)
p_barplot
