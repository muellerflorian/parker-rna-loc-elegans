library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="~/Dropbox/labwork/PROJECTS/quantification_RNA_RBPS")
getwd()
projectdir <- "~/Dropbox/labwork/PROJECTS/quantification_RNA_RBPS"
inputdir <- paste(projectdir, "1_input", sep = "/")
outputdir <- paste(projectdir, "3_output", sep = "/")
# Read in the counts data
setwd(inputdir) # Set working directory
getwd() # Check the working directory
knitr::opts_knit$set(root.dir="~/Dropbox/labwork/PROJECTS/quantification_RNA_RBPS/1_input")
setwd("~/Dropbox/labwork/PROJECTS/quantification_RNA_RBPS/1_input")
quantTable <- read.table(file = "RNAi_Quantification_table_clean.txt", header = TRUE, row.names = 1) # import the data
# re-order the factors
quantTable$Cell_Stage <- factor(quantTable$Cell_Stage, levels = c("4-cell", "8-cell", "12-14-cell", "16-24-cell", "25-48-cell", "26-48-cell"))
# Merge the "25-48-cell"" with the "26-48-cell" categories"
quantTable$Cell_Stage[which(quantTable$Cell_Stage == "26-48-cell")] <- "25-48-cell"
dim(quantTable)
head(quantTable)
ggplot(quantTable, aes(Cell_Stage, Total_no_RNA, fill= RNAi_Condition)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25, colour = rep(c("purple", "green"), 10)) +
geom_dotplot(binaxis = "y",stackdir = "center") +
scale_fill_manual(values=c("purple", "green")) +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(quantTable, aes(Cell_Stage, Total_no_RNA, fill= RNAi_Condition)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25, colour = rep(c("purple", "green", "magenta"), 10)) +
geom_dotplot(binaxis = "y",stackdir = "center") +
scale_fill_manual(values=c("purple", "green", "magenta")) +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(quantTable, aes(Cell_Stage, Total_no_RNA, fill= RNAi_Condition)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25, colour = rep(c("purple", "green", "orange"), 10)) +
geom_dotplot(binaxis = "y",stackdir = "center") +
scale_fill_manual(values=c("purple", "green", "orange")) +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(quantTable, aes(Cell_Stage, log(No_RNA_clusters), fill= RNAi_Condition)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25, colour = rep(c("purple", "green", "orange"), 10)) +
geom_dotplot(binaxis = "y",stackdir = "center") +
scale_fill_manual(values=c("purple", "green", "orange")) +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(quantTable, aes(Cell_Stage, fraction_RNA_in_clusters, fill= RNAi_Condition)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25, colour = rep(c("purple", "green", "orange"), 10)) +
geom_dotplot(binaxis = "y",stackdir = "center") +
scale_fill_manual(values=c("purple", "green", "orange")) +
scale_y_continuous(limits=c(0, 1)) +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(quantTable, aes(Cell_Stage, Average_RNA_per_Cluster, fill= RNAi_Condition)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25, colour = rep(c("purple", "green", "orange"), 10)) +
geom_dotplot(binaxis = "y",stackdir = "center") +
scale_fill_manual(values=c("purple", "green", "orange")) +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
Wilcoxon.test(RNAi_Condition ~ Cell_Stage+Transcript, data = quantTable)
wilcox.test(RNAi_Condition ~ Cell_Stage+Transcript, data = quantTable)
wilcox.test(RNAi_Condition ~ (Cell_Stage+Transcript), data = quantTable)
wilcox.test(RNAi_Condition ~ (Cell_Stage), data = quantTable)
wilcox.test(RNAi_Condition ~ Cell_Stage, data = quantTable)
wilcox.test(Average_RNA_per_Cluster ~ RNAi_Condition, data = noPie)
noPie <- filter(quantTable, RNAi_Condition == "mex-3" | RNAi_Condition == "L4440" )
dim(noPie)
wilcox.test(Average_RNA_per_Cluster ~ RNAi_Condition, data = noPie)
wilcox.test(Average_RNA_per_Cluster ~ (RNAi_Condition+Cell_Stage), data = noPie)
#load libraries
library(dplyr)
library(ggplot2)
setwd("~/Dropbox/labwork/travel/wormMeeting2019/poster/sub-images")
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir="~/Dropbox/labwork/PROJECTS/quantification_RNA_RBPS")
getwd()
projectdir <- "~/Dropbox/labwork/PROJECTS/quantification_RNA_RBPS"
inputdir <- paste(projectdir, "1_input", sep = "/")
outputdir <- paste(projectdir, "3_output", sep = "/")
# Read in the counts data
setwd(inputdir) # Set working directory
getwd() # Check the working directory
knitr::opts_knit$set(root.dir="~/Dropbox/labwork/PROJECTS/quantification_RNA_RBPS/1_input")
setwd("~/Dropbox/labwork/PROJECTS/quantification_RNA_RBPS/1_input")
getwd()
quantTable <- read.table(file = "RNAi_Quantification_table_190617.txt", header = TRUE, row.names = 1) # import the data
# re-order the factors
quantTable$Cell_Stage <- factor(quantTable$Cell_Stage, levels = c("4-cell", "8-cell", "12-14-cell", "16-24-cell", "25-48-cell", "26-48-cell"))
# Merge the "25-48-cell"" with the "26-48-cell" categories"
quantTable$Cell_Stage[which(quantTable$Cell_Stage == "26-48-cell")] <- "25-48-cell"
dim(quantTable)
head(quantTable)
str(quantTable)
noPie <- filter(quantTable, RNAi_Condition != "pie-1")
#noPie <- filter(noPie, Transcript == "chs-1" | Transcript == "nos-2" | Transcript == "clu-1")
dim(noPie)
noPie$RNAi_Condition <- factor(noPie$RNAi_Condition, levels = c("L4440", "oma-1", "mex-3", "spn-4", "spn-4mex-3"))
unique(noPie$RNAi_Condition)
noPie$RNAi_Condition
ggplot(noPie, aes(Cell_Stage, Total_no_RNA, fill= RNAi_Condition)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25, colour = rep(c("purple", "green", "orange", "blue", "red"),20)) +
geom_dotplot(binaxis = "y", stackdir = "center") +
scale_fill_manual(values=c("purple", "green", "orange", "blue", "red")) +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
85/5
help(geom_dotplot)
# Make a function to summarize the data
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
#Summarize the data for Number of RNAs
noPiel_summ_total_RNA <- data_summary(noPie, varname="Total_no_RNA",
groupnames=c("Transcript", "RNAi_Condition", "Cell_Stage"))
# plot number of RNA molecules by transcript type
ggplot(noPiel_summ_total_RNA, aes(x=Cell_Stage, y=Total_no_RNA, group=RNAi_Condition, color=RNAi_Condition))+
geom_ribbon(aes(ymin=Total_no_RNA-sd, ymax=Total_no_RNA+sd, fill = RNAi_Condition), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript , scales = "free_y") +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
help(geom_ribbon)
library(scales)
show_col(hue_pal()(5))
control <- filter(quantTable, RNAi_Condition == "L4440")
dim(control)
ggplot(control, aes(Cell_Stage, No_RNA_clusters, color = Transcript)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25) +
geom_dotplot(binaxis = "y", stackdir = "center") +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control, aes(Cell_Stage, Average_RNA_per_Cluster, color = Transcript)) +
stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean, geom = "crossbar", width = 0.25) +
geom_dotplot(binaxis = "y", stackdir = "center") +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
# Make a function to summarize the data
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
library(plyr)
#Summarize the data for Number of RNAs
control_summ_No_RNA <- data_summary(control, varname="Total_no_RNA",
groupnames=c("Transcript", "Cell_Stage"))
# plot number of RNA molecules by transcript type
ggplot(control_summ_No_RNA, aes(x=Cell_Stage, y=Total_no_RNA, group=Transcript, color=Transcript))+
geom_errorbar(aes(ymin=Total_no_RNA-sd, ymax=Total_no_RNA+sd), width=.1, position=position_dodge(0.05)) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
#Summarize the data for Number of RNA clusters
control_summ_No_RNA_Clusters <- data_summary(control, varname="No_RNA_clusters",
groupnames=c("Transcript", "Cell_Stage"))
# plot number of RNA clusters by transcript type
ggplot(control_summ_No_RNA_Clusters, aes(x=Cell_Stage, y=No_RNA_clusters, group=Transcript, color=Transcript))+
geom_errorbar(aes(ymin=No_RNA_clusters-sd, ymax=No_RNA_clusters+sd), width=.1, position=position_dodge(0.05)) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
# plot number of RNA clusters by transcript type
ggplot(control_summ_No_RNA_Clusters, aes(x=Cell_Stage, y=No_RNA_clusters, group=Transcript, color=Transcript))+
geom_errorbar(aes(ymin=No_RNA_clusters-sd, ymax=No_RNA_clusters+sd), width=.1, position=position_dodge(0.05)) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
# plot number of RNA molecules by transcript type
ggplot(control_summ_No_RNA, aes(x=Cell_Stage, y=Total_no_RNA, group=Transcript, color=Transcript))+
geom_errorbar(aes(ymin=Total_no_RNA-sd, ymax=Total_no_RNA+sd), width=.1, position=position_dodge(0.05)) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
#Summarize the data for Fraction mRNAs in clusters
control_summ_fract_RNA_Clusters <- data_summary(control, varname="fraction_RNA_in_clusters",
groupnames=c("Transcript", "Cell_Stage"))
# plot Fraction mRNAs in clusters by transcript type
ggplot(control_summ_fract_RNA_Clusters, aes(x=Cell_Stage, y=fraction_RNA_in_clusters, group= Transcript, color=Transcript))+
geom_errorbar(aes(ymin=fraction_RNA_in_clusters-sd, ymax=fraction_RNA_in_clusters+sd), width=.05, position=position_dodge(0.05)) +
geom_line() + geom_point() +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
# Make a function to summarize the data
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
#Summarize the data for Number of clusters
noPiel_summ_avg_RNA_per_cluster <- data_summary(noPie, varname="Average_RNA_per_Cluster",
groupnames=c("Transcript", "RNAi_Condition", "Cell_Stage"))
# plot number of RNA molecules by transcript type
ggplot(noPiel_summ_avg_RNA_per_cluster, aes(x=Cell_Stage, y=Average_RNA_per_Cluster, group=RNAi_Condition, color=RNAi_Condition))+
scale_y_continuous(limits = c(0, 55)) +
geom_ribbon(aes(ymin=Average_RNA_per_Cluster-sd, ymax=Average_RNA_per_Cluster+sd, fill = RNAi_Condition), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_summ_fract_RNA_Clusters, aes(x=Cell_Stage, y=fraction_RNA_in_clusters, group=Transcript, color=Transcript))+
geom_ribbon(aes(ymin=fraction_RNA_in_clusters-sd, ymax=fraction_RNA_in_clusters+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
#Summarize the data forAverage_RNA_per_Cluster
control_ave_RNA_per_cluster <- data_summary(control, varname="Average_RNA_per_Cluster",
groupnames=c("Transcript", "Cell_Stage"))
# plot Average mRNAs in clusters by transcript type
pdf("average_mRNAs_per_cluster_L4440.pdf")
dev.off()
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=Average_RNA_per_Cluster, group= Transcript, color=Transcript))+
geom_errorbar(aes(ymin=Average_RNA_per_Cluster-sd, ymax=Average_RNA_per_Cluster+sd), width=.05, position=position_dodge(0.05)) +
geom_line() + geom_point() +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
# plot Average_RNA_per_Cluster by transcript type
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=Average_RNA_per_Cluster, group= Transcript, color=Transcript))+
geom_errorbar(aes(ymin=Average_RNA_per_Cluster-sd, ymax=Average_RNA_per_Cluster+sd), width=.05, position=position_dodge(0.05)) +
geom_line() + geom_point() +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=Average_RNA_per_Cluster, group= Transcript, color=Transcript))+
geom_errorbar(aes(ymin=Average_RNA_per_Cluster-sd, ymax=Average_RNA_per_Cluster+sd), width=.05, position=position_dodge(0.05)) +
geom_line() + geom_point() +
facet_grid(. ~ Transcript) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=control_ave_RNA_per_cluster, group=Transcript, color=Transcript))+
geom_ribbon(aes(ymin=control_ave_RNA_per_cluster-sd, ymax=control_ave_RNA_per_cluster+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
#Summarize the data forAverage_RNA_per_Cluster
control_ave_RNA_per_cluster <- data_summary(control, varname="Average_RNA_per_Cluster",
groupnames=c("Transcript", "Cell_Stage"))
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=control_ave_RNA_per_cluster, group=Transcript, color=Transcript))+
geom_ribbon(aes(ymin=control_ave_RNA_per_cluster-sd, ymax=control_ave_RNA_per_cluster+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
# plot Average_RNA_per_Cluster by transcript type
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=Average_RNA_per_Cluster, group= Transcript, color=Transcript))+
geom_errorbar(aes(ymin=Average_RNA_per_Cluster-sd, ymax=Average_RNA_per_Cluster+sd), width=.05, position=position_dodge(0.05)) +
geom_line() + geom_point() +
facet_grid(Transcript ~ .) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=Average_RNA_per_Cluster, group= Transcript, color=Transcript))+
geom_errorbar(aes(ymin=Average_RNA_per_Cluster-sd, ymax=Average_RNA_per_Cluster+sd), width=.05, position=position_dodge(0.05)) +
geom_line() + geom_point() +
facet_grid(. ~ Transcript) +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=control_ave_RNA_per_cluster, group=Transcript, color=Transcript))+
geom_ribbon(aes(ymin=control_ave_RNA_per_cluster-sd, ymax=control_ave_RNA_per_cluster+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
control_ave_RNA_per_cluster
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=control_ave_RNA_per_cluster, group=Transcript, color=Transcript))+
geom_ribbon(aes(ymin=control_ave_RNA_per_cluster-sd, ymax=control_ave_RNA_per_cluster+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=control_ave_RNA_per_cluster, group=Transcript))+
geom_ribbon(aes(ymin=control_ave_RNA_per_cluster-sd, ymax=control_ave_RNA_per_cluster+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=control_ave_RNA_per_cluster)+
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=control_ave_RNA_per_cluster, group=Transcript))+
geom_ribbon(aes(ymin=control_ave_RNA_per_cluster-sd,ymax=control_ave_RNA_per_cluster+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=control_ave_RNA_per_cluster, group=Transcript))+
geom_ribbon(aes(ymin=control_ave_RNA_per_cluster-sd,ymax=control_ave_RNA_per_cluster+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=control_ave_RNA_per_cluster, group=Transcript))+
geom_ribbon(aes(ymin=control_ave_RNA_per_cluster-sd,ymax=control_ave_RNA_per_cluster+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=control_ave_RNA_per_cluster))+
geom_ribbon(aes(ymin=control_ave_RNA_per_cluster-sd,ymax=control_ave_RNA_per_cluster+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=control_ave_RNA_per_cluster))+
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
control_ave_RNA_per_cluster
ggplot(control_ave_RNA_per_cluster, aes(x=Cell_Stage, y=Average_RNA_per_Cluster, group=Transcript, color=Transcript))+
geom_ribbon(aes(ymin=Average_RNA_per_Cluster-sd, ymax=Average_RNA_per_Cluster+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_summ_fract_RNA_Clusters, aes(x=Cell_Stage, y=fraction_RNA_in_clusters, group=Transcript, color=Transcript))+
geom_ribbon(aes(ymin=fraction_RNA_in_clusters-sd, ymax=fraction_RNA_in_clusters+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_summ_No_RNA_Clusters, aes(x=Cell_Stage, y=No_RNA_clusters, group=Transcript, color=Transcript))+
geom_ribbon(aes(ymin=No_RNA_clusters-sd, ymax=No_RNA_clusters+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_summ_No_RNA, aes(x=Cell_Stage, y=Total_no_RNA, group=Transcript, color=Transcript))+
geom_ribbon(aes(ymin=Total_no_RNA-sd, ymax=Total_no_RNA+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
# plot number of RNA molecules by transcript type
ggplot(control_summ_No_RNA, aes(x=Cell_Stage, y=Total_no_RNA, group=Transcript, color=Transcript))+
geom_errorbar(aes(ymin=Total_no_RNA-sd, ymax=Total_no_RNA+sd), width=.1, position=position_dodge(0.05)) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
# plot number of RNA molecules by transcript type
ggplot(control_summ_No_RNA, aes(x=Cell_Stage, y=Total_no_RNA, group=Transcript, color=Transcript))+
geom_errorbar(aes(ymin=Total_no_RNA-sd, ymax=Total_no_RNA+sd), width=.1, position=position_dodge(0.05)) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
ggplot(control_summ_No_RNA, aes(x=Cell_Stage, y=Total_no_RNA, group=Transcript, color=Transcript))+
geom_ribbon(aes(ymin=Total_no_RNA-sd, ymax=Total_no_RNA+sd, fill = Transcript), alpha=0.1, linetype = 0) +
facet_grid(. ~ Transcript) +
geom_line() + geom_point() +
theme_linedraw() +
theme(strip.text = element_text(face = "italic"))
